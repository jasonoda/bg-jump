const validateGameDataCode='\nfunction validateGameData(initialGameData, breadcrumbs, finalGameData) {\n\n  // add final breadcrumb\n\n  breadcrumbs.push(finalGameData.metadata.breadcrumb);\n\n  console.log("validate game data");\n  \n  var isValid = true;\n  var reasons = [];\n\n  console.log("---------------------------------------");\n\n  for(var i=0; i<breadcrumbs.length; i++){\n\n    console.log(i);\n    console.log(breadcrumbs[i]);\n\n  }\n\n  console.log("---------------------------------------");\n\n  console.log(finalGameData);\n\n  console.log("---------------------------------------");\n\n  // ---------------------------------------------------------------------------------------------\n  // check for breadcrumb for every level (prevent level skipping cheats)\n  // ---------------------------------------------------------------------------------------------\n\n  console.log("=== LEVEL SKIP CHECK ===");\n  // Get the final level reached from the last breadcrumb\n  var finalLevel = breadcrumbs[breadcrumbs.length - 1].currentLevel || 0;\n  console.log("Final level reached:", finalLevel);\n  \n  // Track which levels have breadcrumbs\n  var levelsWithBreadcrumbs = {};\n  for(var i = 0; i < breadcrumbs.length; i++){\n    if(breadcrumbs[i].currentLevel !== undefined){\n      levelsWithBreadcrumbs[breadcrumbs[i].currentLevel] = true;\n    }\n  }\n  console.log("Levels with breadcrumbs:", Object.keys(levelsWithBreadcrumbs).join(\', \'));\n  \n  // Check that every level from 2 to finalLevel has a breadcrumb\n  // (Level 1 doesn\'t need a breadcrumb since game starts at level 1)\n  for(var level = 2; level <= finalLevel; level++){\n    if(!levelsWithBreadcrumbs[level]){\n      console.log("❌ MISSING breadcrumb for level " + level);\n      reasons.push("MISSING BREADCRUMB FOR LEVEL " + level + " - possible level skip cheat");\n      isValid = false;\n    }\n  }\n  console.log(isValid ? "✅ All levels have breadcrumbs" : "❌ Level skip detected");\n  console.log("========================");\n \n  // ---------------------------------------------------------------------------------------------\n  // check coin/pellet count (prevent coin duplication cheats)\n  // ---------------------------------------------------------------------------------------------\n\n  console.log("=== COIN COUNT CHECK ===");\n  // Game has 3 pellets per level for 30 levels = 90 total pellets maximum\n  var MAX_PELLETS = 90;\n  var finalPelletCount = breadcrumbs[breadcrumbs.length - 1].pelletCount || 0;\n  console.log("Coins collected:", finalPelletCount, "/ Max:", MAX_PELLETS);\n  \n  if(finalPelletCount > MAX_PELLETS){\n    console.log("❌ TOO MANY COINS - possible duplication cheat");\n    reasons.push("TOO MANY COINS COLLECTED " + finalPelletCount + " / " + MAX_PELLETS + " - possible coin duplication cheat");\n    isValid = false;\n  } else {\n    console.log("✅ Coin count is valid");\n  }\n  console.log("========================");\n\n  // ---------------------------------------------------------------------------------------------\n  // check final score calculation (height + coins)\n  // ---------------------------------------------------------------------------------------------\n\n  console.log("=== SCORE CALCULATION CHECK ===");\n  // Get values from the last breadcrumb (which is the final breadcrumb)\n  var finalHeightScore = breadcrumbs[breadcrumbs.length - 1].heightScore || 0;\n  var finalCoinScore = finalPelletCount * 25; // Each coin is worth 25 points\n  var calculatedFinalScore = finalHeightScore + finalCoinScore;\n  var reportedFinalScore = finalGameData.score || 0;\n  \n  console.log("Height score:", finalHeightScore);\n  console.log("Coin score:", finalCoinScore, "(", finalPelletCount, "coins × 25)");\n  console.log("Calculated total:", calculatedFinalScore);\n  console.log("Reported total:", reportedFinalScore);\n  \n  if(calculatedFinalScore !== reportedFinalScore){\n    console.log("❌ SCORE MISMATCH - calculated vs reported don\'t match");\n    reasons.push("SCORE MISMATCH - Calculated: " + calculatedFinalScore + " (height: " + finalHeightScore + " + coins: " + finalCoinScore + ") but reported: " + reportedFinalScore);\n    isValid = false;\n  } else {\n    console.log("✅ Score calculation is valid");\n  }\n  console.log("================================");\n\n  // ---------------------------------------------------------------------------------------------\n  // check if extra breadcrumbs were added\n  // ---------------------------------------------------------------------------------------------\n\n  if( breadcrumbs.length > finalGameData.level){\n\n    reasons.push("TOO MANY BREADCRUMBS "+breadcrumbs.length+" / "+finalGameData.level);\n    isValid=false;\n\n  }\n  \n  // ---------------------------------------------------------------------------------------------\n  // end\n  // ---------------------------------------------------------------------------------------------\n\n  console.log("---------------------------------------");\n\n  console.log(isValid);\n\n  for(var i=0; i<reasons.length; i++){\n\n    console.log( reasons[i] );\n\n  }\n\n  console.log("---------------------------------------");\n\n  var status = {\n    isValid: isValid,\n    reasons: reasons\n  }\n\n  return status\n\n}\n';